// <auto-generated />
using System;
using BumboDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BumboDB.Migrations
{
    [DbContext(typeof(BumboContext))]
    [Migration("20221020122902_noseeddata")]
    partial class noseeddata
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BumboDB.EntityModels.Activiteit", b =>
                {
                    b.Property<string>("Beschrijving")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AfdelingNaam")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Beschrijving");

                    b.HasIndex("AfdelingNaam");

                    b.ToTable("Activiteiten");
                });

            modelBuilder.Entity("BumboDB.EntityModels.Afdeling", b =>
                {
                    b.Property<string>("Naam")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Naam");

                    b.ToTable("Afdelingen");
                });

            modelBuilder.Entity("BumboDB.EntityModels.Eenheid", b =>
                {
                    b.Property<string>("EenheidType")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EenheidType");

                    b.ToTable("Eenheden");
                });

            modelBuilder.Entity("BumboDB.EntityModels.Filiaal", b =>
                {
                    b.Property<int>("FiliaalId")
                        .HasColumnType("int");

                    b.Property<int>("LocatieID")
                        .HasColumnType("int");

                    b.Property<int>("MeterSchappen")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FiliaalId");

                    b.ToTable("Filialen");
                });

            modelBuilder.Entity("BumboDB.EntityModels.Functie", b =>
                {
                    b.Property<string>("Naam")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Naam");

                    b.ToTable("Functies");
                });

            modelBuilder.Entity("BumboDB.EntityModels.GewerkteUren", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AfdelingNaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("BeginTijd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EindTijd")
                        .HasColumnType("datetime2");

                    b.Property<int>("FiliaalId")
                        .HasColumnType("int");

                    b.Property<string>("WerknemerBID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AfdelingNaam");

                    b.HasIndex("FiliaalId");

                    b.HasIndex("WerknemerBID");

                    b.ToTable("GewerkteUren");
                });

            modelBuilder.Entity("BumboDB.EntityModels.Locatie", b =>
                {
                    b.Property<int>("LocatieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocatieId"), 1L, 1);

                    b.Property<string>("Huisnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plaats")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocatieId");

                    b.ToTable("Locaties");
                });

            modelBuilder.Entity("BumboDB.EntityModels.Normering", b =>
                {
                    b.Property<int>("NormeringId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NormeringId"), 1L, 1);

                    b.Property<int>("AantalPerUur")
                        .HasColumnType("int");

                    b.Property<string>("ActiviteitBeschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EenheidType")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("FiliaalId")
                        .HasColumnType("int");

                    b.HasKey("NormeringId");

                    b.HasIndex("ActiviteitBeschrijving");

                    b.HasIndex("EenheidType");

                    b.HasIndex("FiliaalId");

                    b.ToTable("Normeringen");
                });

            modelBuilder.Entity("BumboDB.EntityModels.PrognoseInput", b =>
                {
                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("FiliaalID")
                        .HasColumnType("int");

                    b.Property<string>("EenheidType")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Waarde")
                        .HasColumnType("int");

                    b.HasKey("Datum", "FiliaalID", "EenheidType");

                    b.HasIndex("EenheidType");

                    b.HasIndex("FiliaalID");

                    b.ToTable("PrognoseInputs");
                });

            modelBuilder.Entity("BumboDB.EntityModels.PrognoseOutput", b =>
                {
                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("FiliaalId")
                        .HasColumnType("int");

                    b.Property<string>("AfdelingNaam")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AantalMedewerkers")
                        .HasColumnType("int");

                    b.HasKey("Datum", "FiliaalId", "AfdelingNaam");

                    b.HasIndex("AfdelingNaam");

                    b.HasIndex("FiliaalId");

                    b.ToTable("PrognoseOutputs");
                });

            modelBuilder.Entity("BumboDB.EntityModels.Roosterpunt", b =>
                {
                    b.Property<int>("RoosterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoosterId"), 1L, 1);

                    b.Property<string>("AfdelingNaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("BeginTijd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EindTijd")
                        .HasColumnType("datetime2");

                    b.Property<string>("WerknemerBID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RoosterId");

                    b.HasIndex("AfdelingNaam");

                    b.HasIndex("WerknemerBID");

                    b.ToTable("Roosterpunten");
                });

            modelBuilder.Entity("BumboDB.EntityModels.Werknemer", b =>
                {
                    b.Property<string>("BID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Achternaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AfdelingNaam")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FiliaalId")
                        .HasColumnType("int");

                    b.Property<string>("FunctieNaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Geboortedatum")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InDienstSinds")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocatieID")
                        .HasColumnType("int");

                    b.Property<int>("Loonschaal")
                        .HasColumnType("int");

                    b.Property<string>("Telefoonnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tussenvoegsel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Voornaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BID");

                    b.HasIndex("AfdelingNaam");

                    b.HasIndex("FiliaalId");

                    b.HasIndex("FunctieNaam");

                    b.HasIndex("LocatieID");

                    b.ToTable("Werknemers");
                });

            modelBuilder.Entity("BumboDB.EntityModels.Activiteit", b =>
                {
                    b.HasOne("BumboDB.EntityModels.Afdeling", null)
                        .WithMany("ActiviteitFK")
                        .HasForeignKey("AfdelingNaam");
                });

            modelBuilder.Entity("BumboDB.EntityModels.Filiaal", b =>
                {
                    b.HasOne("BumboDB.EntityModels.Locatie", "Locatie")
                        .WithMany("Filialen")
                        .HasForeignKey("FiliaalId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Locatie");
                });

            modelBuilder.Entity("BumboDB.EntityModels.GewerkteUren", b =>
                {
                    b.HasOne("BumboDB.EntityModels.Afdeling", "Afdeling")
                        .WithMany()
                        .HasForeignKey("AfdelingNaam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BumboDB.EntityModels.Filiaal", "Filiaal")
                        .WithMany()
                        .HasForeignKey("FiliaalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BumboDB.EntityModels.Werknemer", "Werknemer")
                        .WithMany()
                        .HasForeignKey("WerknemerBID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Afdeling");

                    b.Navigation("Filiaal");

                    b.Navigation("Werknemer");
                });

            modelBuilder.Entity("BumboDB.EntityModels.Normering", b =>
                {
                    b.HasOne("BumboDB.EntityModels.Activiteit", "Activiteit")
                        .WithMany()
                        .HasForeignKey("ActiviteitBeschrijving")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BumboDB.EntityModels.Eenheid", "Eenheid")
                        .WithMany()
                        .HasForeignKey("EenheidType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BumboDB.EntityModels.Filiaal", "Filiaal")
                        .WithMany()
                        .HasForeignKey("FiliaalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activiteit");

                    b.Navigation("Eenheid");

                    b.Navigation("Filiaal");
                });

            modelBuilder.Entity("BumboDB.EntityModels.PrognoseInput", b =>
                {
                    b.HasOne("BumboDB.EntityModels.Eenheid", "Eenheid")
                        .WithMany("PrognoseInputs")
                        .HasForeignKey("EenheidType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BumboDB.EntityModels.Filiaal", "Filiaal")
                        .WithMany("PrognoseInputs")
                        .HasForeignKey("FiliaalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eenheid");

                    b.Navigation("Filiaal");
                });

            modelBuilder.Entity("BumboDB.EntityModels.PrognoseOutput", b =>
                {
                    b.HasOne("BumboDB.EntityModels.Afdeling", "Afdeling")
                        .WithMany("PrognoseOutputs")
                        .HasForeignKey("AfdelingNaam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BumboDB.EntityModels.Filiaal", "Filiaal")
                        .WithMany("PrognoseOutputs")
                        .HasForeignKey("FiliaalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Afdeling");

                    b.Navigation("Filiaal");
                });

            modelBuilder.Entity("BumboDB.EntityModels.Roosterpunt", b =>
                {
                    b.HasOne("BumboDB.EntityModels.Afdeling", "Afdeling")
                        .WithMany()
                        .HasForeignKey("AfdelingNaam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BumboDB.EntityModels.Werknemer", "Werknemer")
                        .WithMany()
                        .HasForeignKey("WerknemerBID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Afdeling");

                    b.Navigation("Werknemer");
                });

            modelBuilder.Entity("BumboDB.EntityModels.Werknemer", b =>
                {
                    b.HasOne("BumboDB.EntityModels.Afdeling", "Afdeling")
                        .WithMany("Werknemers")
                        .HasForeignKey("AfdelingNaam");

                    b.HasOne("BumboDB.EntityModels.Filiaal", "Filiaal")
                        .WithMany("Werknemers")
                        .HasForeignKey("FiliaalId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BumboDB.EntityModels.Functie", "Functie")
                        .WithMany()
                        .HasForeignKey("FunctieNaam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BumboDB.EntityModels.Locatie", "Locatie")
                        .WithMany("Werknemers")
                        .HasForeignKey("LocatieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Afdeling");

                    b.Navigation("Filiaal");

                    b.Navigation("Functie");

                    b.Navigation("Locatie");
                });

            modelBuilder.Entity("BumboDB.EntityModels.Afdeling", b =>
                {
                    b.Navigation("ActiviteitFK");

                    b.Navigation("PrognoseOutputs");

                    b.Navigation("Werknemers");
                });

            modelBuilder.Entity("BumboDB.EntityModels.Eenheid", b =>
                {
                    b.Navigation("PrognoseInputs");
                });

            modelBuilder.Entity("BumboDB.EntityModels.Filiaal", b =>
                {
                    b.Navigation("PrognoseInputs");

                    b.Navigation("PrognoseOutputs");

                    b.Navigation("Werknemers");
                });

            modelBuilder.Entity("BumboDB.EntityModels.Locatie", b =>
                {
                    b.Navigation("Filialen");

                    b.Navigation("Werknemers");
                });
#pragma warning restore 612, 618
        }
    }
}
